# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.7
      - image: postgres:9.5
      - image: redis:latest
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_DB=test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r dev-requirements.txt
            pip install -r requirements.txt
            pip install -e .
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --cov=./
            codecov --token=$CODECOV_TOKEN
          environment:
            - FLASK_APP: 'manage'
      - run:
          name: Lint documentation
          command: |
            . venv/bin/activate
            doc8 docs
      - run:
          name: Build docs site
          command: |
            . venv/bin/activate
            sphinx-build -W docs staged
      - run:
          name: Deploy if master branch
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                touch .nojekyll
                git config --global user.email "dankolbman@gmail.com"
                git config --global user.name "Dan Kolbman"
                mv staged/ ../
                git checkout -b gh-pages
                git fetch origin gh-pages
                git reset --hard origin/gh-pages
                GLOBIGNORE=.git rm -rf ./*
                mv ../staged/* ./
                git add -A .
                git commit --allow-empty -m ":recycle: Update docs site"
                git push -q https://${GITHUB_TOKEN}@github.com/kids-first/kf-api-release-coordinator.git
            fi

      - store_artifacts:
          path: test-reports
          destination: test-reports
  publish:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: kfdrc/kf-api-release-coordinator
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build --target dev -t $IMAGE_NAME:latest .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
            export IMAGE_TAG=${CIRCLE_TAG/v/''}
            export pat="^([0-9]+)\.([0-9]+)\.([0-9]+)$"
            if [[ $IMAGE_TAG =~ $pat ]]; then
                docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
                docker push $IMAGE_NAME:$IMAGE_TAG
            fi

workflows:
  version: 2
  build:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - gh-pages
      - publish:
          filters:
            branches:
              only: master
